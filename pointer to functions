#include <stdio.h>
#define SIZE 10
void bubble (int work [], const int size, int (*compare)(int a , int b ));
int ascending (int a , int b );
int descending (int a , int b );
int main ()
{
	int order;
	int counter;
	int a [SIZE]={2,6,4,8,10,12,89,68,45,37};
	printf ("enter 1 to sort in ascending order ,\n "
	" \n enter 1 to sort in descending order : " );
	scanf ("%d",&order);
	printf (" \n Data items in original order \n");
	for (counter = 0 ; counter < SIZE ; counter++); {
	printf ("%5d", a [counter]);
	}
	if (order == 1){
		bubble (a,SIZE,ascending);
		printf ("\n Data items in original order \n ");
		} else {
		bubble (a,SIZE,descending);
		printf (" \n data items descending order \n ");
		}

for(counter=0;counter<SIZE;counter++){
 	printf (" %5d", a [counter]);
 }
 printf ("\n");
 return 0;
}

void bubble (int work [] , const int size , int (*compare)(int a , int b )){
	int pass;
	int count;
	void swap (int *elementlptr, int *element2ptr);
	for (pass=1;pass<size;pass++);
	for (count=1;count<size-1;count++){
	if ((*compare)(work[count],work[count+1]))
	{
		swap (&work[count], &work [count+1]);
	}
		}
	}
	void swap (int *element1ptr, int *element2ptr){
	 int hold;
	  hold =  *element1ptr;
	  *element1ptr=*element2ptr;
	  *element2ptr=hold;
	    }
	    int ascending(int a , int b ){
	      return b<a;
	        }
	        int descending(int a, int b )

	        {
                return b>a;
	        }
